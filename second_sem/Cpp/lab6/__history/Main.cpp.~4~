#include <vcl.h>
#pragma hdrstop

#include "Main.h"
#include "TaskTree.h"
#include <string>

#pragma package(smart_init)
#pragma resource "*.dfm"


TForm1 *Form1;
TaskTree<String> *tree = new TaskTree<String>;


__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
	tree->Insert(24, "Alex");
	tree->Insert(2, "Max");
	tree->Insert(25, "Jack");
	tree->Insert(15, "George");
	tree->Insert(7, "John");
	tree->Insert(3, "Pavel");
	tree->Insert(9, "Dmitriy");
	tree->Insert(5, "Den");
	tree->Insert(6, "Denis");
	tree->Insert(28, "Jack");

	tree->Show_tree(TreeView1);

}
void __fastcall TForm1::Button1Click(TObject *Sender)
{
	int key = (Edit1 -> Text).ToInt();
	String name = Edit2 -> Text;

	tree->Insert(key, name);

	tree->Show_tree(TreeView1);

	Edit1 ->Clear();
	Edit2 ->Clear();
}

void __fastcall TForm1::Button2Click(TObject *Sender)
{
	switch(RadioGroup1 -> ItemIndex)
	{
		case 0:

			break;

		case 1:

			break;

		case 2:

			break;
	}
}
void __fastcall TForm1::Button3Click(TObject *Sender)
{
	int key = (Edit3 ->Text).ToInt();

	tree->Delete_node(key);

	tree->Show_tree(TreeView1);

	Edit3 ->Clear();
}
