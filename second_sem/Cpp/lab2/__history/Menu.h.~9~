#ifndef MenuH
#define MenuH

#include <vector>
#include <string>
#include "Dish.h"

#endif


class Menu
{
	public:
		Menu()
		{
			counter = 0;
		}

		void InitInfo()
		{
			TStringList *List = new TStringList;
			AnsiString fileName = "MenuInput.txt";
			List->LoadFromFile(fileName);

			amountOfDishes = (List -> Count) / 4;

			for (int i = 0; i < amountOfDishes; ++i)
			{
				AnsiString title = List -> Strings[counter++];
				AnsiString description = List -> Strings[counter++];
				int price = (List -> Strings[counter++]).ToInt();
				++counter;


				Dish dish(title, description, price);
				_menu.push_back(dish);
			}
		}


		void ShowInfo(TMemo *Memo1)
		{
			for (int i = 0; i < amountOfDishes; i++)
			{
				String text("Dish #" + (String)i);
				String title("\tTitle: " + _menu[i].GetTitle());
				String description("\tDescription: " + _menu[i].GetDescription());
				String price("\tPrice: " + (String)_menu[i].GetPrice());

				Memo1 -> Lines ->Add(text);
				Memo1 -> Lines -> Add(title);
				Memo1 -> Lines -> Add(description);
				Memo1 -> Lines -> Add(price);
			}
		}

		void ShowInfoByPrice(TMemo *Memo1)
		{
			Dish* temp = new Dish;

			for (int i = 0; i < size - 1; i++)
			{
				for (int j = 0; j < size - i - 1; j++)
				{
					if (_menu[j].GetPrice()) > _menu[j + 1].GetPrice())
					{
						temp = _menu[j];
						_menu[j] = _menu[j + 1];
						_menu[j + 1] = temp;
					}
				}
			}


		}


	private:
		int counter;
		int amountOfDishes;
		std::vector <Dish> _menu;
};
